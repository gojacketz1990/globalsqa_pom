{"name": "test_registration", "status": "failed", "statusDetails": {"message": "AssertionError: Tar warning was displayed when it should NOT have been.\nassert not True\n +  where True = is_tar_limit_exceeded()\n +    where is_tar_limit_exceeded = <pages.angularjs_comsumptioncalculatorPage.AngularJSConsumptionCalculatorPage object at 0x103a20dd0>.is_tar_limit_exceeded", "trace": "self = <tests.test_angularjsconsumptioncalculatorPage.TestConsumptionCalculator object at 0x103979210>\n\n    def test_registration(self):\n    \n        from utilities.FakerHelper import FakerHelper\n        data_generator = FakerHelper(locale='en_US')\n    \n        globalsqaPage = GlobalsqaMainPage(self.driver)\n        angularjsPage = globalsqaPage.header.gotoAngularSitePage()\n    \n        consumptioncalculatorPage = angularjsPage.gotoConsumptionCalculator()\n    \n        cups_of_coffee = random.randint(1,5)\n        number_of_cigarettes = random.randint(1,5)\n    \n        # ... (Your test setup: navigate to the calculator page) ...\n    \n        # Enter a quantity for coffee\n        consumptioncalculatorPage.enter_cups_of_coffee(cups_of_coffee)\n    \n        # Get the total caffeine from the page\n        total_caffeine = consumptioncalculatorPage.get_total_caffeine()\n    \n        time.sleep(3)\n    \n        # Verify the total caffeine calculation (assuming 107.5mg per cup)\n        expected_caffeine = cups_of_coffee * 107.5\n        print(expected_caffeine)\n    \n        assert total_caffeine == math.floor(expected_caffeine + 0.5), f\"Caffeine total is incorrect. Expected {math.floor(expected_caffeine + 0.5)}, got {total_caffeine}\"\n    \n    \n        if expected_caffeine > 400:\n            # Assert that the warning is displayed\n            assert consumptioncalculatorPage.is_caffeine_limit_exceeded(), \"Caffeine limit warning was NOT displayed when it should have been.\"\n        else:\n            # Assert that the warning is NOT displayed\n            assert not consumptioncalculatorPage.is_caffeine_limit_exceeded(), \"Caffeine warning was displayed when it should NOT have been.\"\n    \n        # Enter a quantity for cigarettes\n        consumptioncalculatorPage.enter_cigarettes(number_of_cigarettes)\n    \n        # Get the total tar from the page\n        total_tar = consumptioncalculatorPage.get_total_tar()\n    \n        # Verify the total tar calculation (assuming 10mg per cigarette)\n        expected_tar = number_of_cigarettes * 10\n        assert total_tar == math.floor(expected_tar + 0.5), f\"Tar total is incorrect. Expected {math.floor(expected_tar + 0.5)}, got {total_tar}\"\n    \n        # Check if the total tar is over the limit and assert the warning appears\n        if expected_tar > 30:\n            assert consumptioncalculatorPage.is_tar_limit_exceeded(), \"Tar limit warning was NOT displayed when it should have been.\"\n        else:\n>           assert not consumptioncalculatorPage.is_tar_limit_exceeded(), \"Tar warning was displayed when it should NOT have been.\"\nE           AssertionError: Tar warning was displayed when it should NOT have been.\nE           assert not True\nE            +  where True = is_tar_limit_exceeded()\nE            +    where is_tar_limit_exceeded = <pages.angularjs_comsumptioncalculatorPage.AngularJSConsumptionCalculatorPage object at 0x103a20dd0>.is_tar_limit_exceeded\n\ntests/test_angularjsconsumptioncalculatorPage.py:62: AssertionError"}, "start": 1755797789835, "stop": 1755797815992, "uuid": "91585cf4-db4e-4899-b1a5-d3cc98bc3752", "historyId": "be7ff038a0d71e34bf41803fac7b1ab3", "testCaseId": "be7ff038a0d71e34bf41803fac7b1ab3", "fullName": "tests.test_angularjsconsumptioncalculatorPage.TestConsumptionCalculator#test_registration", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_angularjsconsumptioncalculatorPage"}, {"name": "subSuite", "value": "TestConsumptionCalculator"}, {"name": "host", "value": "Matthews-MacBook-Pro.local"}, {"name": "thread", "value": "12082-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_angularjsconsumptioncalculatorPage"}], "titlePath": ["tests", "test_angularjsconsumptioncalculatorPage.py", "TestConsumptionCalculator"]}